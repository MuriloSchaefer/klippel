import{b as P,_ as S,r as T}from"../../vendor-e4518210.js";import{p}from"../../kernel-5843a605.js";import{a as D,b as $,c as x,d as j,u as V,e as _,s as L,f as k,g as U,h as B,i as q,j as H,l as F,k as Y,o as z}from"../Composer-36632299.js";const X=(m,g)=>{const l=p("Store"),f=p("Graph"),h=p("Materials"),{useAppDispatch:y,useAppSelector:u}=l.hooks,n=y(),{useGraph:I}=f.hooks,{useMaterialTypes:b}=h.hooks,M=e=>{if(!e)return;const{compositionName:o,viewportName:t}=m;if(o)return e.Composer.compositionsManager.compositions[o];if(t)return Object.values(e.Composer.compositionsManager.compositions).find(a=>a.viewportName===t);console.warn("either compositionName or viewportName shall be provided")},c=P(M,g),E=u(c),i=u(M),s=I(i?.graphId,e=>({adjacencyList:e?.adjacencyList,nodes:e?.nodes,edges:e?.edges})),G=b();return{state:E,actions:{changeProperties(e,o){const t=s.state?.nodes?.garment;if(!t)throw Error("root node not found");const a={...t,label:e,description:o};s.actions.updateNode(a)},addToBudget(e,o){const t=Object.values(s.state?.nodes??{}).filter(a=>a.type==="GRADE").map(a=>a.id);n(D({compositionName:e,budgetId:o,gradesInfo:t}))},addGrade(e,o){const t=S.uniqueId(`${e}-grade-`),a={type:"GRADE",id:t,abbreviation:e,position:{x:0,y:0}};s.actions.addNode(a);const d={type:"HAS_GRADE",id:`garment -> ${t}`,sourceId:"garment",targetId:t,order:o};s.actions.addEdge(d),i?.budget&&n($({compositionName:i.name,budgetId:i.budget.budgetId,gradeId:t}))},reorderGrade(e,o){s.actions.updateEdge(`garment -> ${e}`,{order:o}),Object.values(s.state?.edges??{}).filter(t=>t.type==="HAS_GRADE"&&t.order>=o).sort((t,a)=>t.order-a.order).forEach(t=>s.actions.updateEdge(t.id,{order:t.order+1}))},removeGrade(e){if(!s.state?.edges||!s.state.adjacencyList)throw Error("edges not defined");const t=s.state.adjacencyList[e].inputs.at(0);if(!t)throw Error("edges not found");const{order:a}=s.state.edges[t];s.actions.removeNode(e),Object.values(s.state?.edges??{}).filter(d=>d.type==="HAS_GRADE"&&d.order>a).sort((d,r)=>d.order-r.order).forEach(d=>s.actions.updateEdge(d.id,{order:d.order-1}))},changeGradeCounter(e,o){n(x({compositionName:i?.name,gradeId:e,counter:o}))},addPart(e,o,t){const a={type:"PART",id:e,label:e,position:{x:0,y:0},domId:o};let d;if(t){const r=`${t}->${e}`;d={inputs:{[r]:{id:r,sourceId:t,targetId:e,type:"COMPOSED_OF"}},outputs:{}}}s.actions.addNode(a,d)},removePart(e){s.actions.removeNode(e)},addMaterialUsage(e,o,t){t.forEach(C=>{Object.values(s.state?.nodes??{}).find(O=>O.id===C)||s.actions.addNode({id:C,type:"MATERIAL_TYPE",label:G[C].label})});const a=S.uniqueId("material-usage-"),d={type:"MATERIAL_USAGE",id:a,label:e,editableAttributes:["materialType","materialId"],materialId:"material-12",materialType:t[0]??"malha",position:{x:0,y:0},proxies:[]},r=`${a}-restriction-1`,N=`${o}->${a}`,v={inputs:{[N]:{id:N,sourceId:o,targetId:a,type:"MADE_OF"}},outputs:{}};s.actions.addNode(d,v);const R={type:"RESTRICTION",restrictionType:"allowOnly",attribute:"materialType",id:r,label:"Permitido apenas",operand:t,position:{x:0,y:0}},A=`${a}->${r}`,w={inputs:{[A]:{id:A,sourceId:a,targetId:r,attr:"materialType",type:"RESTRICTED_BY"}},outputs:{}};s.actions.addNode(R,w)},removeMaterialUsage(e){s.actions.removeNode(e)},addRestriction(e,o){n(j({compositionName:i.name,materialId:e,restriction:o}))},updateRestriction(e,o,t){n(V({compositionName:i.name,materialId:e,restrictionId:o,changes:t}))},removeRestriction(e,o){n(_({compositionName:i.name,materialId:e,restrictionId:o}))},removeOperation(e){s.actions.removeNode(e)},addOperation(e,o,t,a){const d=S.uniqueId("operation-"),r=`${a}->${d}`,N={id:d,type:"OPERATION",label:e,position:{x:0,y:0},cost:o,time_taken:t},v={inputs:{[r]:{id:r,sourceId:a,targetId:d,type:"PROCESS_NEEDED"}},outputs:{}};s.actions.addNode(N,v)},updateOperation(e,o){if(!s.state){console.error("updating a node without graph state");return}const t=s.state?.nodes[e];s?.actions.updateNode({...t,...o})},updateMaterialConsuption:(e,o)=>{s.actions.updateEdge(e,o)},deleteMaterialConsuption:e=>{s.actions.removeEdge(e)},addMaterialConsuption:(e,o,t)=>{const a={id:`${e}->${o}`,sourceId:e,targetId:o,type:"CONSUMES",quantity:t};s.actions.addEdge(a)},selectPart(e){n(L({compositionName:i.name,partName:e}))},changeMaterialType(e,o){s.actions.nodeExists(o)||n(k({compositionName:i?.name,materialType:o})),s.actions.updateNode({id:e,materialType:o})},changeMaterial(e,o){n(U({compositionName:i?.name,materialUsageId:e,materialId:o}))},addProxy(e,o){n(B({compositionName:i.name,materialId:o,proxy:e}))},deleteProxy(e,o){n(q({compositionName:i.name,materialId:o,proxyId:e}))},updateProxy(){}}}},J=()=>{const m=p("Store"),g=p("Graph"),l=p("Layout"),f=p("SVG"),{useAppDispatch:h,useAppSelector:y}=m.hooks,u=h(),n=l.hooks.useViewportManager(),I=f.hooks.useSVGManager(),b=g.managers.graphs(),{compositionsManager:M}=y(H);return{functions:{listCompositions(){u(F())},createComposition(c,E){const i=n.functions.addViewport(c,"Composer",void 0,"composition-");n.functions.selectViewport(i);const s=E;b.functions.createGraph(i),u(Y({name:i,viewportName:i,svgPath:s,graphId:i})),I.functions.loadSVG(s,i)},createDebugView(c,E){const i=`debug-${c}`;n.functions.createGroup(i,"blue"),n.functions.addToGroup(E,i);const s=n.functions.addViewport("Modelo","DebuggerViewport",i,"debug-");u(z({compositionName:c,debugViewport:s})),n.functions.selectViewport(s)},findComposition(c){return Object.values(M.compositions).find(c)}}}},Z=()=>{const m=p("Store"),{useAppSelector:g}=m.hooks,l=J(),f=g(h=>h.Composer.compositionsManager.compositionsList);return T.useLayoutEffect(()=>{l.functions.listCompositions()},[]),f};export{J as a,Z as b,X as u};
