import{b as T,_ as G,r as $}from"../../vendor-efd8fb1e.js";import{n as p}from"../../kernel-d84f35dc.js";import{a as x,b as j,c as V,d as L,u as _,e as k,s as U,f as B,g as q,h as H,i as F,j as Y,l as z,k as J,o as K}from"../Composer-02d26644.js";const ee=(f,h)=>{const M=p("Store"),y=p("Layout"),E=p("Graph"),b=p("Materials"),{useAppDispatch:N,useAppSelector:u}=M.hooks,i=N(),v=y.hooks.usePanelsManager(),{useGraph:C}=E.hooks,{useMaterialTypes:m}=b.hooks,l=e=>{if(!e)return;const{compositionName:o,viewportName:t}=f;if(o)return e.Composer.compositionsManager.compositions[o];if(t)return Object.values(e.Composer.compositionsManager.compositions).find(a=>a.viewportName===t);console.warn("either compositionName or viewportName shall be provided")},r=T(l,h),g=u(r),d=u(l),s=C(d?.graphId,e=>({adjacencyList:e?.adjacencyList,nodes:e?.nodes,edges:e?.edges})),P=m();return{state:g,actions:{changeProperties(e,o){const t=s.state?.nodes?.garment;if(!t)throw Error("root node not found");const a={...t,label:e,description:o};s.actions.updateNode(a)},addToBudget(e,o){const t=Object.values(s.state?.nodes??{}).filter(a=>a.type==="GRADE").map(a=>a.id);i(x({compositionName:e,budgetId:o,gradesInfo:t}))},addGrade(e,o){const t=G.uniqueId(`${e}-grade-`),a={type:"GRADE",id:t,abbreviation:e,position:{x:0,y:0}};s.actions.addNode(a);const n={type:"HAS_GRADE",id:`garment -> ${t}`,sourceId:"garment",targetId:t,order:o};s.actions.addEdge(n),i(j({compositionName:d?.name,budgetId:d?.budget?.budgetId,gradeId:t}))},reorderGrade(e,o){s.actions.updateEdge(`garment -> ${e}`,{order:o}),Object.values(s.state?.edges??{}).filter(t=>t.type==="HAS_GRADE"&&t.order>=o).sort((t,a)=>t.order-a.order).forEach(t=>s.actions.updateEdge(t.id,{order:t.order+1}))},removeGrade(e){if(!s.state?.edges||!s.state.adjacencyList)throw Error("edges not defined");const t=s.state.adjacencyList[e].inputs.at(0);if(!t)throw Error("edges not found");const{order:a}=s.state.edges[t];s.actions.removeNode(e),Object.values(s.state?.edges??{}).filter(n=>n.type==="HAS_GRADE"&&n.order>a).sort((n,c)=>n.order-c.order).forEach(n=>s.actions.updateEdge(n.id,{order:n.order-1}))},changeGradeCounter(e,o){i(V({compositionName:d?.name,gradeId:e,counter:o}))},addPart(e,o,t){const a={type:"PART",id:e,label:e,position:{x:0,y:0},domId:o};let n;if(t){const c=`${t}->${e}`;n={inputs:{[c]:{id:c,sourceId:t,targetId:e,type:"COMPOSED_OF"}},outputs:{}}}s.actions.addNode(a,n)},removePart(e){s.actions.removeNode(e)},addMaterialUsage(e,o,t){t.forEach(A=>{Object.values(s.state?.nodes??{}).find(O=>O.id===A)||(console.log("adding type node"),s.actions.addNode({id:A,type:"MATERIAL_TYPE",label:P[A].label}))});const a=G.uniqueId("material-usage-"),n={type:"MATERIAL_USAGE",id:a,label:e,editableAttributes:["materialType","materialId"],materialId:"material-12",materialType:t[0]??"malha",position:{x:0,y:0},proxies:[]},c=`${a}-restriction-1`,I=`${o}->${a}`,S={inputs:{[I]:{id:I,sourceId:o,targetId:a,type:"MADE_OF"}},outputs:{}};s.actions.addNode(n,S);const w={type:"RESTRICTION",restrictionType:"allowOnly",attribute:"materialType",id:c,label:"Permitido apenas",operand:t,position:{x:0,y:0}},R=`${a}->${c}`,D={inputs:{[R]:{id:R,sourceId:a,targetId:c,attr:"materialType",type:"RESTRICTED_BY"}},outputs:{}};s.actions.addNode(w,D)},removeMaterialUsage(e){s.actions.removeNode(e)},addRestriction(e,o){i(L({compositionName:d.name,materialId:e,restriction:o}))},updateRestriction(e,o,t){i(_({compositionName:d.name,materialId:e,restrictionId:o,changes:t}))},removeRestriction(e,o){i(k({compositionName:d.name,materialId:e,restrictionId:o}))},removeOperation(e){s.actions.removeNode(e)},addOperation(e,o,t,a){const n=G.uniqueId("operation-"),c=`${a}->${n}`,I={id:n,type:"OPERATION",label:e,position:{x:0,y:0},cost:o,time_taken:t},S={inputs:{[c]:{id:c,sourceId:a,targetId:n,type:"PROCESS_NEEDED"}},outputs:{}};s.actions.addNode(I,S)},updateMaterialConsuption:(e,o)=>{s.actions.updateEdge(e,o)},deleteMaterialConsuption:e=>{s.actions.removeEdge(e)},addMaterialConsuption:(e,o,t)=>{const a={id:`${e}->${o}`,sourceId:e,targetId:o,type:"CONSUMES",quantity:t};s.actions.addEdge(a)},selectPart(e){i(U({compositionName:d.name,partName:e})),v.functions.openDetails()},changeMaterialType(e,o){s.actions.nodeExists(o)||i(B({compositionName:d?.name,materialType:o})),s.actions.updateNode({id:e,materialType:o})},changeMaterial(e,o){i(q({compositionName:d?.name,materialUsageId:e,materialId:o}))},addProxy(e,o){i(H({compositionName:d.name,materialId:o,proxy:e}))},deleteProxy(e,o){i(F({compositionName:d.name,materialId:o,proxyId:e}))},updateProxy(){}}}},Q=()=>{const f=p("Store"),h=p("Graph"),M=p("Layout"),y=p("SVG"),{useAppDispatch:E,useAppSelector:b}=f.hooks,N=E(),u=M.hooks.useViewportManager(),i=y.hooks.useSVGManager(),v=h.managers.graphs(),{compositionsManager:C}=b(Y);return{functions:{listCompositions(){N(z())},createComposition(m,l){const r=u.functions.addViewport(m,"Composer",void 0,"composition-"),g=l;v.functions.createGraph(r),N(J({name:r,viewportName:r,svgPath:g,graphId:r})),i.functions.loadSVG(g,r)},createDebugView(m,l){const r=`debug-${m}`;u.functions.createGroup(r,"blue"),u.functions.addToGroup(l,r);const g=u.functions.addViewport("Modelo","DebuggerViewport",r,"debug-");N(K({compositionName:m,debugViewport:g})),u.functions.selectViewport(g)},findComposition(m){return Object.values(C.compositions).find(m)}}}},oe=()=>{const f=p("Store"),{useAppSelector:h}=f.hooks,M=Q(),y=h(E=>E.Composer.compositionsManager.compositionsList);return $.useLayoutEffect(()=>{M.functions.listCompositions()},[]),y};export{Q as a,oe as b,ee as u};
