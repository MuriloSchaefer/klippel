import{b as $,_ as R,r as x}from"../../vendor-14971a7b.js";import{n as p}from"../../kernel-47e54a14.js";import{a as T,u as V,d as j,s as L,b as _,c as k,e as U,f as q,g as H,l as F,h as Y,o as B}from"../Composer-204a30fb.js";const W=(M,f)=>{const h=p("Store"),E=p("Layout"),y=p("Graph"),v=p("Materials"),{useAppDispatch:N,useAppSelector:u}=h.hooks,d=N(),S=E.hooks.usePanelsManager(),{useGraph:b}=y.hooks,{useMaterials:l}=v.hooks,g=e=>{if(!e)return;const{compositionName:o,viewportName:t}=M;if(o)return e.Composer.compositionsManager.compositions[o];if(t)return Object.values(e.Composer.compositionsManager.compositions).find(a=>a.viewportName===t);console.warn("either compositionName or viewportName shall be provided")},i=$(g,f),m=u(i),c=u(g),s=b(c?.graphId,e=>({adjacencyList:e?.adjacencyList,nodes:e?.nodes,edges:e?.edges})),w=l();return{state:m,actions:{changeProperties(e,o){const t=s.state?.nodes?.garment;if(!t)throw Error("root node not found");const a={...t,label:e,description:o};s.actions.updateNode(a)},addGrade(e,o){const t=R.uniqueId(`${e}-grade-`),a={type:"GRADE",id:t,abbreviation:e,position:{x:0,y:0}};s.actions.addNode(a);const n={type:"HAS_GRADE",id:`garment -> ${t}`,sourceId:"garment",targetId:t,order:o};s.actions.addEdge(n)},reorderGrade(e,o){s.actions.updateEdge(`garment -> ${e}`,{order:o}),Object.values(s.state?.edges??{}).filter(t=>t.type==="HAS_GRADE"&&t.order>=o).sort((t,a)=>t.order-a.order).forEach(t=>s.actions.updateEdge(t.id,{order:t.order+1}))},removeGrade(e){if(!s.state?.edges||!s.state.adjacencyList)throw Error("edges not defined");const t=s.state.adjacencyList[e].inputs.at(0);if(!t)throw Error("edges not found");const{order:a}=s.state.edges[t];s.actions.removeNode(e),Object.values(s.state?.edges??{}).filter(n=>n.type==="HAS_GRADE"&&n.order>a).sort((n,r)=>n.order-r.order).forEach(n=>s.actions.updateEdge(n.id,{order:n.order-1}))},addPart(e,o,t){const a={type:"PART",id:e,label:e,position:{x:0,y:0},domId:o};let n;if(t){const r=`${t}->${e}`;n={inputs:{[r]:{id:r,sourceId:t,targetId:e,type:"COMPOSED_OF"}},outputs:{}}}s.actions.addNode(a,n)},removePart(e){s.actions.removeNode(e)},addMaterialUsage(e,o,t){t.forEach(A=>{Object.values(s.state?.nodes??{}).find(D=>D.id===A)||(console.log("adding type node"),s.actions.addNode({id:A,type:"MATERIAL_TYPE",label:w[A].label}))});const a=R.uniqueId("material-usage-"),n={type:"MATERIAL_USAGE",id:a,label:e,editableAttributes:["materialType","materialId"],materialId:"material-12",materialType:t[0]??"malha",position:{x:0,y:0},proxies:[]},r=`${a}-restriction-1`,I=`${o}->${a}`,C={inputs:{[I]:{id:I,sourceId:o,targetId:a,type:"MADE_OF"}},outputs:{}};s.actions.addNode(n,C);const G={type:"RESTRICTION",restrictionType:"allowOnly",attribute:"materialType",id:r,label:"Permitido apenas",operand:t,position:{x:0,y:0}},P=`${a}->${r}`,O={inputs:{[P]:{id:P,sourceId:a,targetId:r,attr:"materialType",type:"RESTRICTED_BY"}},outputs:{}};s.actions.addNode(G,O)},removeMaterialUsage(e){s.actions.removeNode(e)},addRestriction(e,o){d(T({compositionName:c.name,materialId:e,restriction:o}))},updateRestriction(e,o,t){d(V({compositionName:c.name,materialId:e,restrictionId:o,changes:t}))},removeRestriction(e,o){d(j({compositionName:c.name,materialId:e,restrictionId:o}))},removeOperation(e){s.actions.removeNode(e)},addOperation(e,o,t,a){const n=R.uniqueId("operation-"),r=`${a}->${n}`,I={id:n,type:"OPERATION",label:e,position:{x:0,y:0},cost:o,time_taken:t},C={inputs:{[r]:{id:r,sourceId:a,targetId:n,type:"PROCESS_NEEDED"}},outputs:{}};s.actions.addNode(I,C)},updateMaterialConsuption:(e,o)=>{s.actions.updateEdge(e,o)},deleteMaterialConsuption:e=>{s.actions.removeEdge(e)},addMaterialConsuption:(e,o,t)=>{const a={id:`${e}->${o}`,sourceId:e,targetId:o,type:"CONSUMES",quantity:t};s.actions.addEdge(a)},selectPart(e){d(L({compositionName:c.name,partName:e})),S.functions.openDetails()},changeMaterialType(e,o){s.actions.nodeExists(o)||d(_({compositionName:c?.name,materialType:o})),s.actions.updateNode({id:e,materialType:o})},changeMaterial(e,o){d(k({compositionName:c?.name,materialUsageId:e,materialId:o}))},addProxy(e,o){d(U({compositionName:c.name,materialId:o,proxy:e}))},deleteProxy(e,o){d(q({compositionName:c.name,materialId:o,proxyId:e}))},updateProxy(){}}}},z=()=>{const M=p("Store"),f=p("Graph"),h=p("Layout"),E=p("SVG"),{useAppDispatch:y,useAppSelector:v}=M.hooks,N=y(),u=h.hooks.useViewportManager(),d=E.hooks.useSVGManager(),S=f.managers.graphs(),{compositionsManager:b}=v(H);return{functions:{listCompositions(){N(F())},createComposition(l,g){const i=u.functions.addViewport(l,"Composer",void 0,"composition-"),m=g;S.functions.createGraph(i),N(Y({name:i,viewportName:i,svgPath:m,graphId:i})),d.functions.loadSVG(m,i)},createDebugView(l,g){const i=`debug-${l}`;u.functions.createGroup(i,"blue"),u.functions.addToGroup(g,i);const m=u.functions.addViewport("Modelo","DebuggerViewport",i,"debug-");N(B({compositionName:l,debugViewport:m})),u.functions.selectViewport(m)},findComposition(l){return Object.values(b.compositions).find(l)}}}},X=()=>{const M=p("Store"),{useAppSelector:f}=M.hooks,h=z(),E=f(y=>y.Composer.compositionsManager.compositionsList);return x.useLayoutEffect(()=>{h.functions.listCompositions()},[]),E};export{z as a,X as b,W as u};
