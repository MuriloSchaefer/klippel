import{b as D,_ as A,r as V}from"../../vendor-45e5b32e.js";import{n as p}from"../../kernel-28f3b0f3.js";import{a as $,u as N,d as G,s as L,b as k,c as _,e as U,f as j,g as q,l as F,h as Y,o as B}from"../Composer-ce1dd0eb.js";const Q=(n,M)=>{const m=p("Store"),h=p("Layout"),y=p("Graph"),C=p("Materials"),{useAppDispatch:I,useAppSelector:u}=m.hooks,r=I(),b=h.hooks.usePanelsManager(),{useGraph:S}=y.hooks,{useMaterials:l}=C.hooks,f=D(o=>o&&o.Composer.compositionsManager.compositions[n],M),i=u(f),d=u(o=>o&&o.Composer.compositionsManager.compositions[n]),t=S(d?.graphId,o=>({adjacencyList:o?.adjacencyList,nodes:o?.nodes})),O=l();return{state:i,actions:{addPart(o,e,s){const a={type:"PART",id:o,label:o,position:{x:0,y:0},domId:e};let g;if(s){const c=`${s}->${o}`;g={inputs:{[c]:{id:c,sourceId:s,targetId:o,type:"COMPOSED_OF"}},outputs:{}}}t.actions.addNode(a,g)},removePart(o){t.actions.removeNode(o)},addMaterialUsage(o,e,s){s.forEach(P=>{Object.values(t.state?.nodes??{}).find(w=>w.id===P)||(console.log("adding type node"),t.actions.addNode({id:P,type:"MATERIAL_TYPE",label:O[P].label}))});const a=A.uniqueId("material-usage-"),g={type:"MATERIAL_USAGE",id:a,label:o,editableAttributes:["materialType","materialId"],materialId:"material-12",materialType:s[0]??"malha",position:{x:0,y:0},proxies:[]},c=`${a}-restriction-1`,E=`${e}->${a}`,v={inputs:{[E]:{id:E,sourceId:e,targetId:a,type:"MADE_OF"}},outputs:{}};t.actions.addNode(g,v);const x={type:"RESTRICTION",restrictionType:"allowOnly",attribute:"materialType",id:c,label:"Permitido apenas",operand:s,position:{x:0,y:0}},R=`${a}->${c}`,T={inputs:{[R]:{id:R,sourceId:a,targetId:c,attr:"materialType",type:"RESTRICTED_BY"}},outputs:{}};t.actions.addNode(x,T)},removeMaterialUsage(o){t.actions.removeNode(o)},addRestriction(o,e){r($({compositionName:n,materialId:o,restriction:e}))},updateRestriction(o,e,s){r(N({compositionName:n,materialId:o,restrictionId:e,changes:s}))},removeRestriction(o,e){r(G({compositionName:n,materialId:o,restrictionId:e}))},removeOperation(o){t.actions.removeNode(o)},addOperation(o,e,s,a){const g=A.uniqueId("operation-"),c=`${a}->${g}`,E={id:g,type:"OPERATION",label:o,position:{x:0,y:0},cost:e,time_taken:s},v={inputs:{[c]:{id:c,sourceId:a,targetId:g,type:"PROCESS_NEEDED"}},outputs:{}};t.actions.addNode(E,v)},updateMaterialConsuption:(o,e)=>{t.actions.updateEdge(o,e)},deleteMaterialConsuption:o=>{t.actions.removeEdge(o)},addMaterialConsuption:(o,e,s)=>{const a={id:`${o}->${e}`,sourceId:o,targetId:e,type:"CONSUMES",quantity:s};t.actions.addEdge(a)},selectPart(o){r(L({compositionName:n,partName:o})),b.functions.openDetails()},changeMaterialType(o,e){t.actions.nodeExists(e)||r(k({compositionName:d?.name,materialType:e})),t.actions.updateNode({id:o,materialType:e})},changeMaterial(o,e){r(_({compositionName:d?.name,materialUsageId:o,materialId:e}))},addProxy(o,e){r(U({compositionName:n,materialId:e,proxy:o}))},deleteProxy(o,e){r(j({compositionName:n,materialId:e,proxyId:o}))},updateProxy(){}}}},z=()=>{const n=p("Store"),M=p("Graph"),m=p("Layout"),h=p("SVG"),{useAppDispatch:y,useAppSelector:C}=n.hooks,I=y(),u=m.hooks.useViewportManager(),r=h.hooks.useSVGManager(),b=M.managers.graphs(),{compositionsManager:S}=C(q);return{functions:{listCompositions(){I(F())},createComposition(l,f){const i=u.functions.addViewport(l,"Composer",void 0,"composition-"),d=f;b.functions.createGraph(i),I(Y({name:i,viewportName:i,svgPath:d,graphId:i})),r.functions.loadSVG(d,i)},createDebugView(l,f){const i=`debug-${l}`;u.functions.createGroup(i,"blue"),u.functions.addToGroup(f,i);const d=u.functions.addViewport("Modelo","DebuggerViewport",i,"debug-");I(B({compositionName:l,debugViewport:d})),u.functions.selectViewport(d)},findComposition(l){return Object.values(S.compositions).find(l)}}}},W=()=>{const n=p("Store"),{useAppSelector:M}=n.hooks,m=z(),h=M(y=>y.Composer.compositionsManager.compositionsList);return V.useLayoutEffect(()=>{m.functions.listCompositions()},[]),h};export{z as a,W as b,Q as u};
