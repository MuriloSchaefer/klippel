import{c as r,e as A,d as D,R as b}from"../vendor-8069b187.js";import{M as B,C as Y,D as H}from"./Composer/components-52c75d82.js";import{A as c,c as J,r as q,d as z,S as T,a as L,l as K,b as R,u as Q,e as E,f as W,g as X,h as Z,i as y,j as oo,k as eo,m as to}from"../kernel-17e84a6e.js";const n="Composer",so="0.0.1",G=r(`[${n}:Compositions:${c.COMMAND}] Add material`),bo=r(`[${n}:Compositions:${c.COMMAND}] Add material type`),io=r(`[${n}:Compositions:${c.COMMAND}] Change material`),O=r(`[${n}:Compositions:${c.COMMAND}] Select part`),I=r(`[${n}:Compositions:${c.COMMAND}] Unselect part`),no=r(`[${n}:Compositions:${c.COMMAND}] Add Proxy`),ao=r(`[${n}:Compositions:${c.COMMAND}] Delete Proxy`);r(`[${n}:Compositions:${c.COMMAND}] Update Proxy`);const ro=r(`[${n}:Compositions:${c.COMMAND}] Add Restriction`),co=r(`[${n}:Compositions:${c.COMMAND}] Delete Restriction`),po=r(`[${n}:Compositions:${c.COMMAND}] Update Restriction`),V=r(`[${n}:Compositions:${c.COMMAND}] Open debug viewport`);r(`[${n}:Compositions:${c.COMMAND}] Create debug viewport`);const mo=r(`[${n}:Compositions:${c.EVENT}] Material added`);r(`[${n}:Compositions:${c.EVENT}] Material type added`);const go=r(`[${n}:Compositions:${c.EVENT}] Part selected`),lo=r(`[${n}:Compositions:${c.EVENT}] Part unselected`),Co=r(`[${n}:Compositions:${c.EVENT}] Material changed`),ho=r(`[${n}:Compositions:${c.EVENT}] Proxy added`),Mo=r(`[${n}:Compositions:${c.EVENT}] Proxy deleted`);r(`[${n}:Compositions:${c.EVENT}] Proxy updated`);const uo=r(`[${n}:Compositions:${c.EVENT}] Restriction added`),fo=r(`[${n}:Compositions:${c.EVENT}] Restriction deleted`),No=r(`[${n}:Compositions:${c.EVENT}] Restriction updated`),$o=r(`[${n}:Compositions:${c.EVENT}] Debug viewport opened`);r(`[${n}:Compositions:${c.EVENT}] Debug viewport closed`);const j=r(`[${n}:Compositions:${c.COMMAND}] Create composition`),w=r(`[${n}:Compositions:${c.COMMAND}] Close composition`);r(`[${n}:Compositions:${c.COMMAND}] Parse SVG`);const P=r(`[${n}:Compositions:${c.COMMAND}] Fetch model `),U=r(`[${n}:Compositions:${c.COMMAND}] Store model`),_=r(`[${n}:Compositions:${c.COMMAND}] Load proxies`),Eo=r(`[${n}:Compositions:${c.EVENT}] Composition created`),Io=r(`[${n}:Compositions:${c.EVENT}] Composition closed`);r(`[${n}:Compositions:${c.EVENT}] SVG parsed`);const F=r(`[${n}:Compositions:${c.EVENT}] Model fetched`),xo=r(`[${n}:Compositions:${c.EVENT}] Proxies loaded`),k=r(`[${n}:Compositions:${c.EVENT}] Model stored`),Ao=e=>e.Composer,f=A();f.startListening({actionCreator:j,effect:async({payload:e},o)=>{const{dispatch:t,getState:i}=o,{Composer:{compositionsManager:s}}=i();t(Eo(s.compositions[e.name]))}});f.startListening({actionCreator:J,effect:async({payload:e},o)=>{const{dispatch:t,getState:i}=o,{Composer:{compositionsManager:s}}=i();Object.values(s.compositions).forEach(a=>{a.viewportName===e.name&&t(w({name:a.name,graphId:a.graphId})),a.debugViewport===e.name&&t(q({viewportName:a.name}))})}});f.startListening({actionCreator:w,effect:async({payload:e},o)=>{const{dispatch:t}=o;t(z({graphId:e.graphId})),t(Io({name:e.name}))}});f.startListening({actionCreator:T,effect:async({payload:e},o)=>{const{dispatch:t,getState:i}=o,{Composer:{compositionsManager:s}}=i(),a=Object.values(s.compositions).filter(m=>m.svgPath===e.path);if(!e.content)return;const l=new DOMParser().parseFromString(e.content,"image/svg+xml").getElementsByTagName("modelPath").item(0)?.innerHTML;l&&a.forEach(m=>{m.loading.loadModel==="not-started"&&t(P({compositionName:m.name,modelPath:l}))})}});f.startListening({actionCreator:P,effect:async({payload:e},o)=>{const{dispatch:t,getState:i}=o,{Composer:{compositionsManager:s}}=i(),a=s.compositions[e.compositionName],p=await(await(await fetch(e.modelPath)).blob()).text();t(F({compositionName:a.name,model:JSON.parse(p)}))}});f.startListening({actionCreator:F,effect:async({payload:e},o)=>{const{dispatch:t,getState:i}=o,{Composer:{compositionsManager:s}}=i(),a=s.compositions[e.compositionName];t(_({compositionName:a.name,model:e.model})),t(U({compositionName:a.name,model:e.model}))}});f.startListening({actionCreator:_,effect:async({payload:e},o)=>{const{dispatch:t,getState:i}=o,{Composer:{compositionsManager:s}}=i(),a=s.compositions[e.compositionName],d=e.model.nodes;Object.values(d).forEach(p=>{if(!("proxies"in p))return;const l=p.proxies.reduce((m,g)=>({...m,[g.elem]:{...m[g.elem],[g.attr]:"grey"}}),{});Object.entries(l).forEach(([m,g])=>{t(L({path:a.svgPath,instanceName:a.name,id:m,styles:g}))})}),t(xo({compositionName:a.name,model:e.model}))}});f.startListening({actionCreator:U,effect:async({payload:e},o)=>{const{dispatch:t,getState:i}=o,{Composer:{compositionsManager:s}}=i(),a=s.compositions[e.compositionName];t(K({graphId:a.graphId,graph:e.model})),t(k({compositionName:a.name,model:e.model}))}});f.startListening({actionCreator:V,effect:async({payload:e},o)=>{const{dispatch:t,getState:i}=o,{Composer:{compositionsManager:s}}=i();s.compositions[e.compositionName],t($o({compositionName:e.compositionName,viewportName:e.debugViewport}))}});const h=A();h.startListening({actionCreator:G,effect:async({payload:e},o)=>{const{dispatch:t,getState:i}=o,{Composer:{compositionsManager:s},Materials:{materials:a,materialTypes:d}}=i(),p=a[e.materialId],l=d[p.type],m=l.schemas[l.latestSchema],g=s.compositions[e.compositionName].graphId,M=`material-${e.materialId}`,C={id:M,type:"MATERIAL",label:p.attributes[m.selector.principal],materialId:e.materialId,position:{x:0,y:0}};t(R({graphId:g,node:C,edges:{inputs:{},outputs:{}}})),t(mo({compositionName:e.compositionName,materialId:e.materialId,nodeId:M}))}});h.startListening({actionCreator:io,effect:async({payload:{compositionName:e,materialUsageId:o,materialId:t}},i)=>{const{dispatch:s,getState:a}=i,d=a(),p=d.Composer.compositionsManager.compositions[e],l=d.Graph.graphs[p.graphId],m=d.Materials.materials[t],g=`material-${t}`;g in l.nodes||s(G({compositionName:p.name,materialId:t}));const C=l.nodes[o],$=Object.values(l.edges).filter(u=>u.sourceId===o&&u.type=="CONSUMES");if("proxies"in C&&C.proxies.length>0&&"cor"in m.attributes){const u=C.proxies.reduce((N,{attr:x,elem:v})=>({...N,[v]:{...N[v],[x]:m.attributes.cor.hex}}),{});Object.entries(u).forEach(([N,x])=>{s(Q({path:p.svgPath,instanceName:p.name,id:N,changes:x}))})}s(E({graphId:p.graphId,nodeId:o,changes:{materialId:g}})),s(W({edge:{id:`${o}->${g}`,sourceId:o,targetId:g,type:"CONSUMES"},graphId:p.graphId})),$.forEach(u=>{s(X({graphId:p.graphId,edgeId:u.id}))}),s(Co({compositionName:e,materialUsageId:o,materialId:g}))}});h.startListening({actionCreator:O,effect:async({payload:e},o)=>{const{dispatch:t}=o;t(go(e))}});h.startListening({actionCreator:Z,effect:async({payload:e},o)=>{const{dispatch:t,getState:i}=o,{Composer:{compositionsManager:{compositions:s}}}=i(),a=Object.values(s).find(d=>d.viewportName===e.viewportName);a&&t(I({compositionName:a.name}))}});h.startListening({actionCreator:I,effect:async({payload:e},o)=>{const{dispatch:t}=o;t(lo({compositionName:e.compositionName}))}});h.startListening({actionCreator:ro,effect:async({payload:{compositionName:e,materialId:o,restriction:t}},i)=>{const{dispatch:s,getState:a}=i,{Composer:{compositionsManager:{compositions:d}},Graph:{graphs:p}}=a(),l=d[e],{searchResults:m}=p[l.graphId];s(R({graphId:l.graphId,node:t,edges:{inputs:{[o]:{id:`${o}->${t.id}`,type:"RESTRICTED_BY",attr:t.attribute,sourceId:o,targetId:t.id}},outputs:{}}})),Object.entries(m).filter(([g,M])=>!!g.includes("restriction")).forEach(([g,M])=>s(y({graphId:l.graphId,searchId:g}))),s(uo({compositionName:e,materialId:o,restrictionId:t.id}))}});h.startListening({actionCreator:po,effect:async({payload:{compositionName:e,materialId:o,restrictionId:t,changes:i}},s)=>{const{dispatch:a,getState:d}=s,{Composer:{compositionsManager:{compositions:p}},Graph:{graphs:l}}=d(),m=p[e],{searchResults:g}=l[m.graphId];a(E({graphId:m.graphId,nodeId:t,changes:i})),Object.entries(g).filter(([M,C])=>!!C.findings.find($=>$.id===t)).forEach(([M,C])=>a(y({graphId:m.graphId,searchId:M}))),a(No({compositionName:e,materialId:o,restrictionId:t}))}});h.startListening({actionCreator:co,effect:async({payload:e},o)=>{const{dispatch:t,getState:i}=o,{Composer:{compositionsManager:{compositions:s}},Graph:{graphs:a}}=i(),d=s[e.compositionName],{searchResults:p}=a[d.graphId];t(oo({graphId:d.graphId,nodeId:e.restrictionId})),Object.entries(p).filter(([l,m])=>!!m.findings.find(g=>g.id===e.restrictionId)).forEach(([l,m])=>t(y({graphId:d.graphId,searchId:l}))),t(fo(e))}});h.startListening({actionCreator:ao,effect:async({payload:e},o)=>{const{dispatch:t,getState:i}=o,{Composer:{compositionsManager:{compositions:s}},Graph:{graphs:a}}=i(),d=s[e.compositionName],p=a[d.graphId];if(!d.selectedPart){console.warn("trying to delete proxy without selecting a part");return}const l=p.nodes[e.materialId];if(!("proxies"in l))return;const m=l.proxies.filter(g=>g.elem!==e.proxyId);t(E({graphId:d.graphId,nodeId:e.materialId,changes:{proxies:m}})),t(eo({path:d.svgPath,instanceName:d.name,id:e.proxyId})),t(Mo(e))}});h.startListening({actionCreator:no,effect:async({payload:e},o)=>{const{dispatch:t,getState:i}=o,{Composer:{compositionsManager:{compositions:s}},Graph:{graphs:a},Materials:{materials:d}}=i(),p=s[e.compositionName],l=a[p.graphId];if(!p.selectedPart){console.error("trying to delete proxy without selecting a part");return}const m=l.nodes[e.materialId];if(!("proxies"in m)){console.error("trying to add proxy in an node that does not support proxies");return}const g=[...m.proxies,e.proxy],M=Number(m.materialId.split("-")[1]),C=d[M];if(!("cor"in C.attributes)){console.error("material does not have a color attribute ");return}const $=g.filter(u=>u.elem===e.proxy.elem).reduce((u,N)=>({...u,[N.attr]:C.attributes.cor.hex}),{});t(E({graphId:p.graphId,nodeId:e.materialId,changes:{proxies:g}})),t(L({path:p.svgPath,instanceName:p.name,id:e.proxy.elem,styles:$})),t(ho(e))}});const So={loading:{loadSVG:"not-started",loadModel:"not-started"}},yo={compositionsManager:{compositions:{}}},S=D({name:n,initialState:{},reducers:{},extraReducers:e=>{e.addCase(O,(o,{payload:{partName:t}})=>({...o,selectedPart:t})),e.addCase(I,o=>({...o,selectedPart:void 0})),e.addCase(V,(o,{payload:t})=>({...o,debugViewport:t.debugViewport}))}}),Oo=D({name:n,initialState:yo,reducers:{},extraReducers:e=>{e.addCase(j,(o,{payload:{name:t,viewportName:i,svgPath:s,graphId:a}})=>({...o,compositionsManager:{...o.compositionsManager,compositions:{...o.compositionsManager.compositions,[t]:{...So,name:t,svgPath:s,graphId:a,viewportName:i}}}})),e.addCase(w,(o,{payload:{name:t}})=>({...o,compositionsManager:{...o.compositionsManager,compositions:Object.values(o.compositionsManager.compositions).reduce((i,s)=>s.name===t?i:{...i,[s.name]:s},{})}})),e.addCase(to,(o,{payload:{path:t}})=>{const i=Object.values(o.compositionsManager.compositions).find(s=>s.svgPath===t);return i?{...o,compositionsManager:{compositions:{...o.compositionsManager.compositions,[i.name]:{...i,loading:{...i.loading,loadSVG:"started"}}}}}:o}),e.addCase(T,(o,{payload:{path:t}})=>{const i=Object.values(o.compositionsManager.compositions).find(s=>s.svgPath===t);return i?{...o,compositionsManager:{compositions:{...o.compositionsManager.compositions,[i.name]:{...i,loading:{...i.loading,loadSVG:"completed"}}}}}:o}),e.addCase(P,(o,{payload:{compositionName:t}})=>({...o,compositionsManager:{compositions:{...o.compositionsManager.compositions,[t]:{...o.compositionsManager.compositions[t],loading:{...o.compositionsManager.compositions[t].loading,loadModel:"started"}}}}})),e.addCase(k,(o,{payload:t})=>({...o,compositionsManager:{compositions:{...o.compositionsManager.compositions,[t.compositionName]:{...o.compositionsManager.compositions[t.compositionName],loading:{...o.compositionsManager.compositions[t.compositionName].loading,loadModel:"completed"}}}}})),e.addCase(O,(o,t)=>({...o,compositionsManager:{...o.compositionsManager,compositions:{...o.compositionsManager.compositions,[t.payload.compositionName]:S.reducer(o.compositionsManager.compositions[t.payload.compositionName],t)}}})),e.addCase(I,(o,t)=>({...o,compositionsManager:{...o.compositionsManager,compositions:{...o.compositionsManager.compositions,[t.payload.compositionName]:S.reducer(o.compositionsManager.compositions[t.payload.compositionName],t)}}})),e.addCase(V,(o,t)=>({...o,compositionsManager:{...o.compositionsManager,compositions:{...o.compositionsManager.compositions,[t.payload.compositionName]:S.reducer(o.compositionsManager.compositions[t.payload.compositionName],t)}}}))}});function Vo({managers:{storeManager:e,componentRegistryManager:o,layoutManager:t,ribbonMenuManager:i,viewportManager:s}}){e.functions.loadReducer(n,Oo.reducer),e.functions.registerMiddleware(f),e.functions.registerMiddleware(h),o.functions.registerComponents({ribbonMenuSections:{ModelSelector:b.memo(B)},viewportTypes:{Composer:b.memo(Y),DebuggerViewport:H}}),i.functions.addNewTab({label:"Compositor",sectionNames:["ModelSelector"],type:"base"})}const Do={name:n,version:so,depends_on:["Layout","Graph","SVG","Materials","Converter"],components:{},kernelCalls:{startModule:Vo,restartModule(){},shutdownModule(){}}};export{ro as a,bo as b,io as c,co as d,no as e,ao as f,Ao as g,j as h,Do as m,V as o,O as s,po as u};
